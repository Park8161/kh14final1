<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="room">

	<!-- 등록 -->
	<select id="sequence" resultType="int">
		select room_seq.nextval from dual
	</select>
	<insert id="insert">
		insert into room ( room_no, room_name, room_created)
		values(#{roomNo}, #{roomName}, systimestamp)
	</insert>
	
	<!-- 목록 -->
	<select id="noList" resultType="int">
		SELECT room_no FROM room_member WHERE member_id = #{memberId} order by room_no asc
	</select>
	
	<!-- 상세 -->
	<select id="find" resultType="RoomDto">
		select * from room where room_no = #{roomNo}
	</select>
	
	<!-- 수정 -->
	<update id="update">
		update room set room_name = #{roomName} where room_no = #{roomNo}
	</update>
	
	<!-- 삭제 -->
	<delete id="delete">
		delete room where room_no = #{roomNo}
	</delete>
	
	<!-- 나 아닌 멤버가 없을 때 쿼리 -->	
	<select id="selectRoomListVO" resultType="RoomListVO">
		SELECT 
	p.product_name, 
	last_msg.room_message_content, 
	last_msg.room_message_time, 
	rm.* 
FROM room_member rm 
JOIN product p ON rm.PRODUCT_NO =  p.PRODUCT_NO 
LEFT JOIN 
 (SELECT room_no, room_message_content, room_message_time 
     FROM (
         SELECT room_no, room_message_content, room_message_time, 
                ROW_NUMBER() OVER (PARTITION BY room_no ORDER BY room_message_time DESC) AS rn 
         FROM room_message 
     ) 
     WHERE rn = 1 
    ) last_msg ON rm.room_no = last_msg.room_no 
WHERE rm.ROOM_NO = #{roomNo}
	</select>
	
	<!-- 나 아닌 참여자가 존재할 때 쿼리 -->
	<select id="selectRoomListVO2" resultType="RoomListVO">
		SELECT 
	p.product_name, 
	last_msg.room_message_content, 
	last_msg.room_message_time, 
	rm.* 
FROM room_member rm 
JOIN product p ON rm.PRODUCT_NO =  p.PRODUCT_NO 
LEFT JOIN 
 (SELECT room_no, room_message_content, room_message_time 
     FROM (
         SELECT room_no, room_message_content, room_message_time, 
                ROW_NUMBER() OVER (PARTITION BY room_no ORDER BY room_message_time DESC) AS rn 
         FROM room_message 
     ) 
     WHERE rn = 1 
    ) last_msg ON rm.room_no = last_msg.room_no 
WHERE rm.ROOM_NO = #{roomNo} AND rm.MEMBER_ID != #{memberId}
	</select>
	
	<!--  첨부 테이블 연결 -->
	<insert id="connect" parameterType="map">
		insert into room_image(attachment, message)
		values(#{attachmentNo}, #{messageRoomNo})
	</insert>
	
	<!-- 이미지 하나 가져오기 -->
	<select id="findImage" resultType="Integer">
		select max(attachment) from room_image where message = #{messageNo}
	</select>
	
	<!-- 여러 이미지를 가져오는 메소드 -->
  	<select id="findImages"  resultType="Integer">
  		select attachment from room_image where message = #{messageNo}
  	</select>

  	<!--  이미지 시간 메소드
  	<select id="findTime" resultType="java.sql.Timestamp">
  		select time from room_image where attachment = #{image}
  	</select> -->
</mapper>