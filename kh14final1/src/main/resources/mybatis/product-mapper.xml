<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="product">

  	<!-- 시퀀스 생성-->
  	<select id="sequence" resultType="int">
  		select product_seq.nextval from dual
  	</select>
  	
  	<!-- 등록 -->
  	<insert id="insert">
  		insert into product (
  			product_no, product_member, product_name,
  			product_category, product_price, product_detail,
  			product_qty
  		)
  		values(
  			#{productNo}, #{productMember}, #{productName},
  			#{productCategory}, #{productPrice}, #{productDetail},
  			#{productQty}
  		)
  	</insert>
  	
  	<!-- 첨부 테이블과의 연결 : product_image -->
  	<insert id="connect" parameterType="map">
  		insert into product_image(product, attachment) 
  		values(#{productNo}, #{attachmentNo})
  	</insert>
  	
  	<!-- 연관상품(소분류동일로 설정, 기준 상품은 제외) 목록 조회 -->
  	<select id="relation" resultType="ProductListVO">
  	<include refid="top-n-header"></include>
  		select P.*, I.attachment from product P
  		left outer join product_image I on P.product_no = I.product 
  		where 
	  		I.attachment = (
	  				select min(attachment) from product_image 
	  				where product = P.product_no
	  			)
  		and product_category = #{productCategory} 
  		and product_no != #{productNo}
  		and product_state != '판매완료'
 		<include refid="top-n-footer"></include>
  	</select>
  	
  	<!-- 데이터 조회 + 페이징 + 검색-->
  	<select id="list" resultType="ProductListVO">
  		<include refid="top-n-header"></include>
  		select P.*, I.attachment from product P 
  		left outer join product_image I on P.product_no = I.product 
  		where 
			I.attachment = (
  				select min(attachment) from product_image 
  				where product = P.product_no
  			)
  			and product_state != '판매완료'
  			and product_state != '판매보류'
  		<if test="column !=null and keyword !=null">
  			and instr(${column}, #{keyword}) > 0
  		</if>
  		order by 
  		<if test="column !=null and keyword !=null">
			${column} asc,
  		</if>
  		product_no desc
  		<include refid="top-n-footer"></include>
  	</select>
  	
  	<!-- 목록 카운트 -->
  	<select id="count" resultType="int">
  		select count(*) from product
  		where product_state != '판매완료'
  		<if test="column !=null and keyword !=null">
  			and instr(${column}, #{keyword}) > 0
  		</if>
  		order by 
  		<if test="column !=null and keyword !=null">
			${column} asc,
  		</if>
  		product_no desc
  	</select>
  	  	
  	<!--  상세  -->
  	<select id="detail" resultType="productDto">
  		select * from product where product_no = #{productNo}
  	</select>
  	
  	<!-- 삭제 -->
  	<delete id="remove">
  		delete product where product_no = #{productNo}
  	</delete>
  	<delete id="removeImage">
  		delete product_image where product = #{productNo}
  	</delete>
  	
  	<!-- 전체 PUT 수정 (likes, member 제외) -->
  	<update id="edit">
  		update product
  			set product_name=#{productName}, product_category=#{productCategory},
	  			product_price=#{productPrice}, product_detail=#{productDetail},
	  			product_qty=#{productQty}
  			where product_no = #{productNo}
  	</update>
  
  	<!-- PATCH 수정 -->
  	<update id="patch">
  		update product
  		<set>
  			<if test="productName != null">product_name=#{productName},</if>
  			<if test="productMember != null">product_member=#{productMember},</if>
  			<if test="productCategory != null and productCategory != 0">product_category=#{productCategory},</if>
  			<if test="productPrice != null and productPrice != 0">product_price=#{productPrice},</if>
  			<if test="productDetail != null">product_detail=#{productDetail},</if>
  			<if test="productState != null">product_state=#{productState},</if>
  			<if test="productQty != null and productQty != 0">product_qty=#{productQty},</if>
  			<if test="productLikes != null and productLikes != 0">product_likes=#{productLikes}</if>
  		</set>
  		where
  			product_no = #{productNo}
  	</update>
  	
  	<!-- 여러 이미지 중 첫 번째만 가져오는 메소드 -->
  	<select id="findImage" resultType="Integer">
  		select min(attachment) from product_image where product = #{productNo}
  	</select>
  	
  	<!-- 여러 이미지를 가져오는 메소드 -->
  	<select id="findImages" resultType="Integer">
  		select attachment from product_image where product = #{productNo}
  	</select>
  	
  	<!-- 좋아요 갱신 기능 -->
  	<update id="likes">
  		update product set product_likes = (
 			select count(*) from product_like where product_no = #{productNo}
  		) where product_no = #{productNo}
  	</update>
  	
  	<!-- 좋아요 목록 -->
  	<select id="likeList" resultType="ProductListVO">
		select P.*, I.attachment 
		from product P 
			left outer join product_like L on P.product_no = L.product_no 
			left outer join product_image I on P.product_no = I.product
		where L.member_id = #{memberId} 
			and I.attachment = (
			    select min(attachment) 
			    from product_image 
			    where product = P.product_no
			)
		order by P.product_no desc
  	</select>
  	
  	<!-- 좋아요 목록 페이징 카운트 쓸려다 안씀 -->
  	<select id="likeCount" resultType="int">
  		select count(*) 
  		from product P where P.product_no in (
 			select L.product_no from product_like L
 			where L.member_id = #{memberId}
  		)
  		left outer join product_image I on P.product_no = I.product
  		where 
  			I.attachment = (
  				select min(attachment) from product_image
  				where product = P.product_no
  			)
  		<if test="column !=null and keyword !=null">
  			and instr(${column}, #{keyword}) > 0
  		</if>
  		order by 
  		<if test="column !=null and keyword !=null">
			${column} asc,
  		</if>
  		product_no desc
  	</select>
  	
  	<!-- 내 상품 목록 : 페이징 검색 없음 -->
  	<select id="myList" resultType="ProductListVO">
  		select P.*, I.attachment from product P 
  		left outer join product_image I on P.product_no = I.product 
  		where 
			I.attachment = (
  				select min(attachment) from product_image 
  				where product = P.product_no
  			)
  		and product_member = #{memberId}
  		order by product_no desc
  	</select>
  	
  	<!-- 관리자용 목록 : 이미지 X -->
  	<select id="adminList" resultType="ProductDto">
  		select * from product
  		<if test="column !=null and keyword !=null">
  			where instr(${column}, #{keyword}) > 0
		</if>
  		order by
  		<if test="column !=null and keyword !=null">
  			${column} desc,
  		</if>
  		product_no desc
  	</select>
  	
  	<!-- 소분류 카테고리로 등록된 상품이 많은 순서 20위까지 -->
  	<select id="hotList" resultType="HotListVO">
  		select * from (
			select rownum rn, TMP.* from (
				select P.product_category, count(*) count, C.category_name from product P
				left outer join category C on P.product_category = C.category_no
				group by P.product_category, C.category_name order by count(*) desc, P.product_category asc
			) TMP
		) where rn between 1 and 20
  	</select>
  	
  	<!-- 자주 사용하는(ex : Top N Query (페이징)) 구문들을 보관해두고서 불러서 사용 - 구문의 조각은 <sql> 
		태그로 작성 - 이 구문을 불러올 때는 <include>로 작성 - beginRow와 endRow가 있을 때만 구동되도록 설정 : 
		유연하게 처리 -->
	<sql id="top-n-header">
		<if test="beginRow != null and endRow != null">
			select * from (
			select rownum rn, TMP.* from (
		</if>
	</sql>
	<sql id="top-n-footer">
		<if test="beginRow != null and endRow != null">
			) TMP
			) where rn between #{beginRow} and #{endRow}
		</if>
	</sql> 	
  	
 </mapper>
  	